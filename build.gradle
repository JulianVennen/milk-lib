plugins {
	id "fabric-loom" version "1.1.+"
	id "io.github.juuxel.loom-quiltflower" version "1.+" // Quiltflower, a better decompiler
	id "maven-publish"
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
group = project.maven_group

String buildNumber = System.getenv("GITHUB_RUN_NUMBER")
String patch = buildNumber != null ? buildNumber : "99999"
version = project.mod_version.replace("<build>", patch)

repositories {
	maven { url = "https://api.modrinth.com/maven" }
	maven { url = "https://maven.bai.lol" }
	maven { url = "https://maven.terraformersmc.com/releases/" }
	maven { url = "https://maven.shedaniel.me/" }
	maven { url = "https://mvn.devos.one/snapshots/" }
}

dependencies {
	// dev environment
	minecraft("com.mojang:minecraft:${project.minecraft_version}")
	mappings("net.fabricmc:yarn:${project.minecraft_version}+build.${project.yarn_mappings}:v2")
	modImplementation("net.fabricmc:fabric-loader:${project.loader_version}")
	modLocalRuntime("maven.modrinth:suggestion-tweaker:${project.suggestion_tweaker_version}")
	modLocalRuntime("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}") { exclude(group: "net.fabricmc.fabric-api") }
	modLocalRuntime("maven.modrinth:jade:${project.jade_version}")
	modLocalRuntime("com.terraformersmc:modmenu:${project.modmenu_version}") { exclude group: "net.fabricmc"; exclude group: "net.fabricmc.fabric-api" }

	// dependencies
	modImplementation("net.fabricmc.fabric-api:fabric-api:${project.fabric_version}")

	modApi(include("io.github.tropheusj:dripstone-fluid-lib:${project.dripstone_fluid_lib_version}"))
}

tasks.register("buildOrPublish") {
	group = "build"
	String mavenUser = System.getenv("MAVEN_USER")
	if (mavenUser != null && !mavenUser.isEmpty()) {
		dependsOn(tasks.named("publish"))
		println("prepared for publish")
	} else {
		dependsOn(tasks.named("build"))
		println("prepared for build")
	}
}


loom {
	accessWidenerPath = file("src/main/resources/milk.accesswidener")
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release.set(17)
}

java {
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}" }
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	repositories {
		maven {
			url = "https://mvn.devos.one/${System.getenv("PUBLISH_SUFFIX")}/"
			credentials {
				username = System.getenv("MAVEN_USER")
				password = System.getenv("MAVEN_PASS")
			}
			authentication { basic(BasicAuthentication) }
		}
	}
}
